#!/usr/bin/env bash
set -eEuo pipefail

# Copyright 2019 Seth Vargo
# Copyright 2019 Google, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

DIR="$(cd "$(dirname "$0")/../terraform"; pwd -P)"

pushd "${DIR}" &>/dev/null

terraform init && terraform apply -auto-approve

SA_EMAIL="$(terraform output service_account_email)"

export VAULT_ADDR="$(terraform output vault_addr)"
export VAULT_CACERT="${DIR}/ca.crt"

while [[ "$(vault status 2>&1)" =~ "connection refused" ]]; do
  sleep 5
done

sleep 300

vault operator init -status &>/dev/null || {
  vault operator init \
    -key-shares 1 \
    -key-threshold 1 \
    -format json \
    > "${DIR}/init.json"
}

export VAULT_TOKEN="$(cat init.json | jq -r .root_token)"

vault auth list 2>&1 | grep "gcp-serverless" || {
  vault auth enable \
    -path gcp-serverless \
    -default-lease-ttl 5m \
    -max-lease-ttl 30m \
    -token-type batch \
    gcp
}

sleep 60

gcloud iam service-accounts list --project "${PROJECT_ID}" 2>&1 | grep "vault-verifier" || {
  gcloud iam service-accounts create "vault-verifier" \
    --project "${PROJECT_ID}"

  gcloud projects add-iam-policy-binding ${PROJECT_ID} \
    --member "serviceAccount:vault-verifier@${PROJECT_ID}.iam.gserviceaccount.com" \
    --role "roles/iam.serviceAccountUser"

  SA_KEY="$(gcloud iam service-accounts keys create - --iam-account=vault-verifier@${PROJECT_ID}.iam.gserviceaccount.com)"

  vault write auth/gcp-serverless/config \
      credentials="${SA_KEY}"
}

popd &>/dev/null
